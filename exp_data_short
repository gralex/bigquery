WITH
  purchase_values AS (
  SELECT
    revenue AS revenue
  FROM (
    SELECT

    transaction_id,
      SUM(CASE
          WHEN event_name = "purchase" THEN value
      END
        ) AS revenue
    FROM (
      SELECT
        *,
        ROW_NUMBER() OVER (PARTITION BY transaction_id ORDER BY value) AS row_number
      FROM
        `%%full_bq_simple_table_name%%`
      WHERE
        (transaction_id IS NOT NULL
          OR NOT transaction_id = "(not set)"
          OR item_id IS NOT NULL)
        AND event_name = "purchase" 
    ) AS subquery
    WHERE
      row_number = 1
    GROUP BY
     --- 1,2,3,4,5,6,7
    1
  )
  GROUP BY
   --- 1,2,3,4,5,6,7 
    1,2
  ),
  DATA AS ( 
  SELECT
    date,
    experiment_variation,
    device_category,
    source,
    medium,
    campaign,
hostname,
   user_pseudo_id,
    CONCAT(user_pseudo_id, ga_session_id) AS session_id,
 
    (CASE
        WHEN event_name = "purchase" AND (transaction_id IS NOT NULL OR NOT transaction_id ="(not set)" OR item_id IS NOT NULL) THEN transaction_id
    END
      ) AS transactions,
  FROM
    `%%full_bq_simple_table_name%%`
  GROUP BY
    1,2,3,4,5,6,7,8,9,10)
SELECT
  data.date,
    experiment_variation,
  data.device_category,
data.source,
    data.medium,
    data.campaign,
  data.user_pseudo_id,
data.session_id,
hostname,


transactions,
sum(pv.revenue) AS revenue,
FROM
  DATA
LEFT JOIN
  purchase_values AS pv
ON
data.transactions = pv.transaction_id and not transactions is null
GROUP BY
 1,2,3,4,5,6,7,8,9,10